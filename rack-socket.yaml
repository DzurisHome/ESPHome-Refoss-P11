esphome:
  name: rack-socket

esp8266:
  board: esp01_1m

#Logger
logger:
  baud_rate: 0

#WiFi
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: 192.168.0.74
    gateway: 192.168.0.1
    subnet: 255.255.255.0

  ap:
    ssid: "Rack Socket Dzuri≈° Home AP"
    password: !secret ap_password

#Web Server
web_server:
  port: 80
  auth:
    username: !secret web_server_username
    password: !secret web_server_password

#OTA
ota:
  safe_mode: true

#MQTT
mqtt:
  broker: !secret mqtt_broker_ip_address
  username: !secret mqtt_broker_username
  password: !secret mqtt_broker_password
  client_id: "Rack Socket"
  discovery: false
  topic_prefix: "Rack Socket"

#Home Assistant API Integration
api:
  encryption:
    key: !secret api_encryption_key

#Home Assistant Time
time:
  - platform: homeassistant
    id: homeassistant_time

#Home Assistant Required


#Device Required
uart:
  rx_pin: RX
  baud_rate: 4800

#Device
switch:
  - platform: gpio
    pin: GPIO13
    id: rack_socket
    name: "Rack Socket"
    icon: ios:server-rack
    device_class: "switch"
    on_turn_off:
    - delay: 15min
    - switch.turn_on: rack_socket

sensor:
  - platform: cse7766
    voltage:
      name: "Rack Voltage"
      icon: mdi:sine-wave
      unit_of_measurement: "V"
      device_class: "voltage"
      state_class: "measurement"
    current:
      name: "Rack Current"
      icon: mdi:current-ac
      unit_of_measurement: "A"
      device_class: "current"
      state_class: "measurement"
    power:
      name: "Rack Power"
      icon: mdi:flash-outline
      unit_of_measurement: "W"
      device_class: "power"
      state_class: "measurement"
    energy:
      name: "Rack kWh"
      icon: mdi:chart-histogram
      unit_of_measurement: "kWh"
      device_class: "power"
      state_class: "total"
    update_interval: 10s

#Diagnostic
  - platform: wifi_signal
    name: "Rack Socket RSSI"
    unit_of_measurement: "dBm"
    device_class: "signal_strength"
    state_class: "measurement"
    entity_category: "diagnostic"

  - platform: uptime
    id: uptime_seconds
    name: "Uptime Seconds"
    icon: mdi:clock-time-four-outline
    update_interval: 1min
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_sensor
            state: !lambda |-
              int seconds = round(id(uptime_seconds).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

text_sensor:
  - platform: template
    id: uptime_sensor
    name: "Rack Socket Uptime"
    icon: mdi:clock-time-four-outline
    entity_category: "diagnostic"

#Configuration
button:
  - platform: restart
    name: "Rack Socket Restart"